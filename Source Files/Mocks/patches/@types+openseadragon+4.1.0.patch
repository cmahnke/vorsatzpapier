diff --git a/node_modules/@types/openseadragon/index.d.ts b/node_modules/@types/openseadragon/index.d.ts
index 4958ca5..da90fff 100644
--- a/node_modules/@types/openseadragon/index.d.ts
+++ b/node_modules/@types/openseadragon/index.d.ts
@@ -281,6 +281,7 @@ declare namespace OpenSeadragon {
             | "copy"
             | "xor"
             | undefined;
+        drawer?: 'webgl' | 'canvas' | 'html';
         placeholderFillStyle?: string | CanvasGradient | CanvasPattern | undefined;
         degrees?: number | undefined;
         flipped?: boolean | undefined;
@@ -774,7 +775,7 @@ declare namespace OpenSeadragon {
         destroy(): void;
         drawHTML(container: HTMLElement): void;
         getBounds(viewport: Viewport): Rect;
-        update(location: Point | Rect, placement: Placement): void;
+        update(location: Point | Rect, placement?: Placement): void;
     }
 
     class Point {
@@ -955,6 +956,10 @@ declare namespace OpenSeadragon {
             ajaxHeaders?: object | undefined;
         });
 
+        _clip?: Rect;
+        _rotationPoint: Point;
+        _worldWidthCurrent: number;
+        _worldWidthTarget: number;
         addHandler<T extends keyof TiledImageEventMap>(
             eventName: T,
             handler: EventHandler<TiledImageEventMap[T]>,
@@ -978,6 +983,7 @@ declare namespace OpenSeadragon {
         getFlip(): boolean;
         getHandler(eventName: string): (source: Event, ...args: any[]) => void;
         getOpacity(): number;
+        getPosition(current?: boolean): Point;
         getPreload(): boolean;
         getRotation(current?: boolean): number;
         getSizeInWindowCoordinates(): Point;
@@ -1014,6 +1020,8 @@ declare namespace OpenSeadragon {
         setPosition(position: Point, immediately?: boolean): void;
         setPreload(preload: boolean): void;
         setRotation(degrees: number, immediately?: boolean): void;
+        setRotationPoint(rotationPoint: Point ): void;
+        setRotationPointImageCoordinates(rotationPoint: Point ): void;
         setWidth(width: number, immediately?: boolean): void;
         update(): boolean;
         viewerElementToImageCoordinates(pixel: Point): Point;
@@ -1029,6 +1037,7 @@ declare namespace OpenSeadragon {
         ): Rect;
         viewportToImageZoom(viewportZoom: number): number;
         windowToImageCoordinates(pixel: Point): Point;
+        _getRotationPoint(current: boolean): Point;
     }
 
     class TileSource extends EventSource {
@@ -1191,6 +1200,12 @@ declare namespace OpenSeadragon {
             homeFillsViewer?: boolean | undefined;
         });
 
+        _contentBoundsNoRotate: Rect;
+        _contentBounds: Rect;
+        _contentSize: Rect;
+        _contentSizeNoRotate: Rect;
+        _contentAspectRatio: number;
+        _setContentBounds(bounds: OpenSeadragon.Rect, contentFactor:number): void;
         applyConstraints(immediately?: boolean): Viewport;
         deltaPixelsFromPoints(deltaPoints: Point, current?: boolean): Point;
         deltaPixelsFromPointsNoRotate(deltaPoints: Point, current?: boolean): Point;
@@ -1244,6 +1259,7 @@ declare namespace OpenSeadragon {
         setRotation(degrees: number): Viewport;
         toggleFlip(): Viewport;
         update(): boolean;
+        viewer: Viewer;
         viewerElementToImageCoordinates(pixel: Point): Point;
         viewerElementToViewportCoordinates(pixel: Point): Point;
         viewerElementToViewportRectangle(rectangle: Rect): Rect;
